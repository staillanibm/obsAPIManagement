replicaCount: 2

image:
  repository: ibmwebmethods.azurecr.io/apigateway-minimal
  pullPolicy: IfNotPresent
  tag: "11.1"

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000


# multiple ingresses for ui, admin, ext and rt
ingresses:
  ui:
    defaultHost: ""
    enabled: true
    svcName: ""
    svcPort: ""
    className: "nginx"
    annotations:
      nginx.ingress.kubernetes.io/affinity: "cookie"
      nginx.ingress.kubernetes.io/proxy-body-size: 10m
      nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
      nginx.ingress.kubernetes.io/proxy-connect-timeout: "600"
      # nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    hosts:
      - host:
        paths:
          - path: /
            pathType: Prefix
    tls:
      - secretName:
        hosts:
        csiSecretProvider:
        secretProviderEnabled: false
        secretProviderSecretName:
  rt:
    defaultHost: ""
    enabled: true
    svcName: ""
    svcPort: ""
    className: "nginx"
    annotations:
      nginx.ingress.kubernetes.io/proxy-body-size: 10m
      nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
      nginx.ingress.kubernetes.io/proxy-connect-timeout: "600"
      # nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    hosts:
      - host:
        paths:
          - path: /gateway
            pathType: Prefix
    tls:
      - secretName:
        hosts:
        secretProviderEnabled: false
        secretProviderSecretName:
  admin:
    defaultHost: ""
    enabled: true
    svcName: ""
    svcPort: ""
    className: "nginx"
    annotations:
      nginx.ingress.kubernetes.io/affinity: "cookie"
      nginx.ingress.kubernetes.io/proxy-body-size: 10m
      nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
      nginx.ingress.kubernetes.io/proxy-connect-timeout: "600"
      # nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    hosts:
      - host:
        paths:
          - path: /
            pathType: Prefix
    tls:
      - secretName:
        hosts:
        secretProviderEnabled: false
        secretProviderSecretName:

# global ingress settings for tls secret name, cert and key
ingress:
  defaultDomain: my-domain.com
  tls:
    # -- default secret name for TLS. By default empty,
    # will look for <release-name-apigateway->tls".
    secretName: ""
    cert: ""
    key: ""
    secretProviderEnabled: false
    secretProviderName: ""
    secretProviderClassName: ""
    secretProviderParameters: {}

resources:
  apigwContainer:
    requests:
      cpu: 500m
      memory: 4Gi
    limits:
      cpu: 8
      memory: 8Gi


autoscaling:
  enabled: false
  minReplicas: 2
  maxReplicas: 5
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

serviceMonitor:
  enabled: true


metering:
  enabled: false

elasticsearch:
  deploy: true
  version: 8.17.3
  storageClassName: "ocs-external-storagecluster-ceph-rbd"

  defaultNodeSet:
    count: 3

kibana:
  version: 8.17.3
  count: 1
